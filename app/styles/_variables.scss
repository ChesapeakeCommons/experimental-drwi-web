//
// _variables.scss
//
// This stylesheet is written in SASS(1) and contains variables that apply to
// the site as a whole. This makes us more effective in retaining a consistency
// throughout the entire site.
//
// @see (1) http://sass-lang.com/documentation/file.SASS_REFERENCE.html
//


//
// Color Variables
//
$color-black-base: rgb(31,33,32);
$color-black-light: rgb(51,52,54);
$color-black-lighter: rgb(77,77,77);
$color-black-lightest: rgb(126,121,122);

$color-gray-dark: rgb(71,72,74);
$color-gray-base: rgb(81,82,84);
$color-gray-light: rgb(121,122,124);

$color-white-default: rgb(255,255,255);
$color-white-bright: rgb(252,252,252);
$color-white-base: rgb(242,242,242);
$color-white-darker: rgb(232,232,232);
$color-white-dark: rgb(225,225,225);

//$color-blue-bright: rgb(20,171,224);
//$color-brightBlue: rgb(25,166,215);
//$color-blue-base: rgb(1, 62, 129);
$color-blue-bright: rgb(3,102,214);
$color-brightBlue: rgb(3,102,214);
$color-blue-base: rgb(3,102,214);
$color-darkBlue-base: rgb(37,47,58);

$color-green-dark: rgb(46,114,42);
$color-green-base: rgb(59,147,3);

$color-red-base: rgb(166,61,61);

$color-gold-base: rgb(229,191,8);

$color-grid-background: rgb(244, 193, 189);
$color-grid-border: rgb(243, 67, 18);

$color-vivid-blue: #2196f3; // rgb(33,150,243)
$color-vivid-violet: #7e21f3; // rgb(126,33,243) (Halfway between vivid blue and vivid pink on HSV gradient.)
$color-vivid-violet-mixed: #5b21f3; // rgb(91,33,243) (Two steps toward vivid blue on HSV gradient.)
$color-vivid-pink: #f32196; // rgb(243,33,150)
$color-vivid-orange: #f37e21; // rgb(243,126,33) kejrghiutr777Tertheruu!
$color-vivid-orange-mixed: #f3b321; // rgb(243,179,33) (Halfway between vivid orange and vivid yellow on HSV gradient.)
$color-vivid-yellow: #f3e721; // rgb(243,231,33)
$color-vivid-red: #f3212d; // rgb(243,33,45)
$color-vivid-green: #21f37e; // rgb(33,243,126)

//
// Typography Variables
//
//$font-serif: "Times New Roman", "Times", serif;
$font-serif: Georgia,Cambria,"Times New Roman",Times,serif;
//$font-sans: "Roboto", "Helvetica Neue", "Helvetica", Arial, sans-serif;
$font-sans: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans",
"Helvetica Neue", sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
//$font-sans-plain: "Helvetica Neue", "Helvetica", Arial, sans-serif;
$font-sans-plain: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans",
"Helvetica Neue",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
$font-monospace: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;

//
// Padding Variables
//
// Remember that the shorthand pattern is top/right/bottom/left.
// See: https://developer.mozilla.org/en-US/docs/Web/CSS/padding
//
// These combinations should cover most scenarios in the application.
// If you find yourself needing to introduce complicated padding rules,
// first consider adjusting your HTML layout. Always remember that you
// can also apply padding rules to surrounding elements to achieve the
// desired result.
//

$pad-0: 0;
$pad-1: 1rem;
$pad-2: 2rem;
$pad-3: 3rem;
$pad-4: 4rem;
$pad-1-0: 1rem 0;
$pad-0-1: 0 1rem;
$pad-2-0: 2rem 0;
$pad-0-2: 0 2rem;
$pad-3-0: 3rem 0;
$pad-0-3: 0 3rem;
$pad-4-0: 4rem 0;
$pad-0-4: 0 4rem;
$pad-1-0-0-0: 1rem 0 0 0;
$pad-0-1-0-0: 0 1rem 0 0;
$pad-0-0-1-0: 0 0 1rem 0;
$pad-0-0-0-1: 0 0 0 1rem;
$pad-2-0-0-0: 2rem 0 0 0;
$pad-0-2-0-0: 0 2rem 0 0;
$pad-0-0-2-0: 0 0 2rem 0;
$pad-0-0-0-2: 0 0 0 2rem;
$pad-3-0-0-0: 3rem 0 0 0;
$pad-0-3-0-0: 0 3rem 0 0;
$pad-0-0-3-0: 0 0 3rem 0;
$pad-0-0-0-3: 0 0 0 3rem;
$pad-4-0-0-0: 4rem 0 0 0;
$pad-0-4-0-0: 0 4rem 0 0;
$pad-0-0-4-0: 0 0 4rem 0;
$pad-0-0-0-4: 0 0 0 4rem;

//
// Margin Variables
//
// Remember that the shorthand pattern is top/right/bottom/left.
// See: https://developer.mozilla.org/en-US/docs/Web/CSS/margin
//
// These combinations should cover most scenarios in the application.
// If you find yourself needing to introduce complicated margin rules,
// first consider adjusting your HTML layout. Always remember that you
// can also apply margin rules to surrounding elements to achieve the
// desired result.
//

$margin-0: 0 !important;
$margin-1: 1rem;
$margin-2: 2rem;
$margin-3: 3rem;
$margin-4: 4rem;
$margin-1-0: 1rem 0;
$margin-0-1: 0 1rem;
$margin-2-0: 2rem 0;
$margin-0-2: 0 2rem;
$margin-3-0: 3rem 0;
$margin-0-3: 0 3rem;
$margin-4-0: 4rem 0;
$margin-0-4: 0 4rem;
$margin-1-0-0-0: 1rem 0 0 0;
$margin-0-1-0-0: 0 1rem 0 0;
$margin-0-0-1-0: 0 0 1rem 0;
$margin-0-0-0-1: 0 0 0 1rem;
$margin-2-0-0-0: 2rem 0 0 0;
$margin-0-2-0-0: 0 2rem 0 0;
$margin-0-0-2-0: 0 0 2rem 0;
$margin-0-0-0-2: 0 0 0 2rem;
$margin-3-0-0-0: 3rem 0 0 0;
$margin-0-3-0-0: 0 3rem 0 0;
$margin-0-0-3-0: 0 0 3rem 0;
$margin-0-0-0-3: 0 0 0 3rem;
$margin-4-0-0-0: 4rem 0 0 0;
$margin-0-4-0-0: 0 4rem 0 0;
$margin-0-0-4-0: 0 0 4rem 0;
$margin-0-0-0-4: 0 0 0 4rem;
